# Default values for snapwatcher.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 192.168.33.204:8082/snapwatcher
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets:
  - name: nexus-registry-secret

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  seccompProfile:
    type: RuntimeDefault

service:
  enabled: false
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 50m
    memory: 64Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# RBAC configuration
rbac:
  # Specifies whether RBAC resources should be created
  create: true

# Namespace configuration
namespace:
  # Specifies whether to create the namespace
  # Set to false if the namespace already exists
  create: false
  # The name of the namespace to use
  name: "snap"

# SnapWatcher specific configuration
snapwatcher:
  # Configuration for the operator
  operator:
    # Log level for the operator
    logLevel: "INFO"
    # Whether to run in all namespaces
    allNamespaces: true
    # Standalone mode
    standalone: true

  # Configuration for checkpoint requests
  checkpoint:
    # SnapHook API endpoint for checkpoint requests
    SNAP_API_URL: "http://snapapi:8000"
    # Kubernetes API server address
    KUBE_API_ADDRESS: "https://kubernetes.default.svc"
    # Request timeout in seconds
    requestTimeout: 5

# Additional environment variables
env: []
  # - name: CUSTOM_VAR
  #   value: "custom_value"

# Additional volumes
volumes: []

# Additional volume mounts
volumeMounts: []
