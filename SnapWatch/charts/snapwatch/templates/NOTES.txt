1. Get the application URL by running these commands:
{{- if .Values.service.enabled }}
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ include "snapwatch.namespace" . }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "snapwatch.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ include "snapwatch.namespace" . }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ include "snapwatch.namespace" . }} svc -w {{ include "snapwatch.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ include "snapwatch.namespace" . }} {{ include "snapwatch.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ include "snapwatch.namespace" . }} -l "app.kubernetes.io/name={{ include "snapwatch.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ include "snapwatch.namespace" . }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ include "snapwatch.namespace" . }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}
{{- else }}
SnapWatch has been deployed successfully!

To check the status of the deployment:
  kubectl get deployment {{ include "snapwatch.fullname" . }} -n {{ include "snapwatch.namespace" . }}

To view the logs:
  kubectl logs -f deployment/{{ include "snapwatch.fullname" . }} -n {{ include "snapwatch.namespace" . }}

To check if pods are being monitored:
  kubectl get pods -l snap.weaversoft.io/snap=true --all-namespaces

SnapWatch will automatically checkpoint pods with the following labels:
  - snap.weaversoft.io/snap: "true"
  - grus.weaversoft.io/mutated: "false"

Configuration:
  - Namespace: {{ include "snapwatch.namespace" . }}
  - SnapBack API URL: {{ .Values.snapwatch.checkpoint.snapBackApiUrl }}
  - Log Level: {{ .Values.snapwatch.operator.logLevel }}
{{- end }}
